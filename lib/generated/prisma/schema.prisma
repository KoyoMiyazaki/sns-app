generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String    @id @default(cuid())
  content   String
  imageUrl  String?
  userId    String
  tags      PostTag[]
  comments  Comment[]
  likes     Like[]
  createdAt DateTime  @default(now())

  user         User           @relation(fields: [userId], references: [id])
  Notification Notification[]
}

model Tag {
  id    String    @id @default(cuid())
  name  String    @unique
  posts PostTag[]
}

model PostTag {
  postId String
  tagId  String

  post Post @relation(fields: [postId], references: [id])
  tag  Tag  @relation(fields: [tagId], references: [id])

  @@id([postId, tagId])
}

model Comment {
  id              String    @id @default(cuid())
  content         String
  userId          String
  postId          String
  parentComment   Comment?  @relation("ReplyTo", fields: [parentCommentId], references: [id])
  parentCommentId String?
  replies         Comment[] @relation("ReplyTo")
  createdAt       DateTime  @default(now())

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  postId    String
  createdAt DateTime @default(now())

  post Post @relation(fields: [postId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([postId, userId])
}

model Notification {
  id        String   @id @default(cuid())
  type      String
  read      Boolean  @default(false)
  userId    String
  postId    String?
  actorId   String
  createdAt DateTime @default(now())

  user  User  @relation("Receiver", fields: [userId], references: [id])
  actor User  @relation("Actor", fields: [actorId], references: [id])
  post  Post? @relation(fields: [postId], references: [id])
}

model User {
  id               String         @id
  username         String?
  Post             Post[]
  Comment          Comment[]
  Like             Like[]
  Notification     Notification[] @relation("Receiver")
  SentNotification Notification[] @relation("Actor")
}
